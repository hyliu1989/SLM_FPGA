	component reader_system is
		port (
			altera_up_sd_card_avalon_interface_0_avalon_sdcard_slave_chipselect  : in    std_logic                     := 'X';             -- chipselect
			altera_up_sd_card_avalon_interface_0_avalon_sdcard_slave_address     : in    std_logic_vector(7 downto 0)  := (others => 'X'); -- address
			altera_up_sd_card_avalon_interface_0_avalon_sdcard_slave_read        : in    std_logic                     := 'X';             -- read
			altera_up_sd_card_avalon_interface_0_avalon_sdcard_slave_write       : in    std_logic                     := 'X';             -- write
			altera_up_sd_card_avalon_interface_0_avalon_sdcard_slave_byteenable  : in    std_logic_vector(3 downto 0)  := (others => 'X'); -- byteenable
			altera_up_sd_card_avalon_interface_0_avalon_sdcard_slave_writedata   : in    std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			altera_up_sd_card_avalon_interface_0_avalon_sdcard_slave_readdata    : out   std_logic_vector(31 downto 0);                    -- readdata
			altera_up_sd_card_avalon_interface_0_avalon_sdcard_slave_waitrequest : out   std_logic;                                        -- waitrequest
			altera_up_sd_card_avalon_interface_0_conduit_end_b_SD_cmd            : inout std_logic                     := 'X';             -- b_SD_cmd
			altera_up_sd_card_avalon_interface_0_conduit_end_b_SD_dat            : inout std_logic                     := 'X';             -- b_SD_dat
			altera_up_sd_card_avalon_interface_0_conduit_end_b_SD_dat3           : inout std_logic                     := 'X';             -- b_SD_dat3
			altera_up_sd_card_avalon_interface_0_conduit_end_o_SD_clock          : out   std_logic;                                        -- o_SD_clock
			clk_clk                                                              : in    std_logic                     := 'X';             -- clk
			reset_reset_n                                                        : in    std_logic                     := 'X';             -- reset_n
			sdram_clock_0_clk                                                    : out   std_logic;                                        -- clk
			sdram_controller_0_s1_address                                        : in    std_logic_vector(24 downto 0) := (others => 'X'); -- address
			sdram_controller_0_s1_byteenable_n                                   : in    std_logic_vector(1 downto 0)  := (others => 'X'); -- byteenable_n
			sdram_controller_0_s1_chipselect                                     : in    std_logic                     := 'X';             -- chipselect
			sdram_controller_0_s1_writedata                                      : in    std_logic_vector(15 downto 0) := (others => 'X'); -- writedata
			sdram_controller_0_s1_read_n                                         : in    std_logic                     := 'X';             -- read_n
			sdram_controller_0_s1_write_n                                        : in    std_logic                     := 'X';             -- write_n
			sdram_controller_0_s1_readdata                                       : out   std_logic_vector(15 downto 0);                    -- readdata
			sdram_controller_0_s1_readdatavalid                                  : out   std_logic;                                        -- readdatavalid
			sdram_controller_0_s1_waitrequest                                    : out   std_logic;                                        -- waitrequest
			sdram_controller_0_wire_addr                                         : out   std_logic_vector(12 downto 0);                    -- addr
			sdram_controller_0_wire_ba                                           : out   std_logic_vector(1 downto 0);                     -- ba
			sdram_controller_0_wire_cas_n                                        : out   std_logic;                                        -- cas_n
			sdram_controller_0_wire_cke                                          : out   std_logic;                                        -- cke
			sdram_controller_0_wire_cs_n                                         : out   std_logic;                                        -- cs_n
			sdram_controller_0_wire_dq                                           : inout std_logic_vector(15 downto 0) := (others => 'X'); -- dq
			sdram_controller_0_wire_dqm                                          : out   std_logic_vector(1 downto 0);                     -- dqm
			sdram_controller_0_wire_ras_n                                        : out   std_logic;                                        -- ras_n
			sdram_controller_0_wire_we_n                                         : out   std_logic                                         -- we_n
		);
	end component reader_system;

